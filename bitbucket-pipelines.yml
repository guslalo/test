image: node:12.18.2
pipelines:
  branches:
    master:
    - step:
        caches:
          - node
        name: "Build"
        script:
          - npm install
          - npm run build
          - apt-get update && apt-get install -y
          - apt-get install zip
          - zip -r itms-frontend.zip dist/ Dockerfile nginx-file.conf Dockerrun.aws.json
        artifacts:
          - itms-frontend.zip
    - step:
        name: "Deploy to Production"
        deployment: production
        script:
        - pipe: atlassian/aws-elasticbeanstalk-deploy:0.6.6
          variables:
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
            AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
            APPLICATION_NAME: "itms-frontend"
            ENVIRONMENT_NAME: "itmsFrontend-env"
            ZIP_FILE: "itms-frontend.zip"
            S3_BUCKET: 'elasticbeanstalk-sa-east-1-654719900413'
            WAIT: 'true'
    develop:
    - step:
        caches:
          - node
        name: "Build"
        script:
          - npm install
          - npm run build-dev
          - apt-get update && apt-get install -y
          - apt-get install zip
          - zip -r itms-frontend.zip dist/ Dockerfile nginx-file.conf Dockerrun.aws.json
        artifacts:
          - itms-frontend.zip
    - step:
        name: "Deploy to Development"
        deployment: development
        script:
        - pipe: atlassian/aws-elasticbeanstalk-deploy:0.6.6
          variables:
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
            AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
            APPLICATION_NAME: "itms-frontend"
            ENVIRONMENT_NAME: "itmsFrontend-dev-env-1"
            ZIP_FILE: "itms-frontend.zip"
            S3_BUCKET: 'elasticbeanstalk-sa-east-1-654719900413'
            WAIT: 'true'
    staging:
    - step:
        caches:
          - node
        name: "Build"
        script:
          - npm install
          - npm run build-staging
          - apt-get update && apt-get install -y
          - apt-get install zip
          - zip -r itms-frontend.zip dist/ Dockerfile nginx-file.conf Dockerrun.aws.json
        artifacts:
          - itms-frontend.zip
    - step:
        name: "Deploy to Staging"
        deployment: staging
        script:
        - pipe: atlassian/aws-elasticbeanstalk-deploy:0.6.6
          variables:
            AWS_ACCESS_KEY_ID: AKIAT7JGNEGM5C5PE6P5
            AWS_SECRET_ACCESS_KEY: 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
            AWS_DEFAULT_REGION: us-east-1
            APPLICATION_NAME: TcregionalFrontendPiloto
            ENVIRONMENT_NAME: Tcregionalfrontendpiloto-env
            ZIP_FILE: "itms-frontend.zip"
            S3_BUCKET: elasticbeanstalk-us-east-1-273347846553
            WAIT: 'true'
    chile:
    - step:
        caches:
          - node
        name: "Build"
        script:
          - npm install
          - npm run build-chile
          - apt-get update && apt-get install -y
          - apt-get install zip
          - zip -r itms-frontend.zip dist/ Dockerfile nginx-file.conf Dockerrun.aws.json
        artifacts:
          - itms-frontend.zip
    - step:
        name: "Deploy to Chile"
        deployment: chile
        script:
        - pipe: atlassian/aws-elasticbeanstalk-deploy:0.6.6
          variables:
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
            AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
            APPLICATION_NAME: itms-frontend
            ENVIRONMENT_NAME: ItmsFrontend-cl
            ZIP_FILE: "itms-frontend.zip"
            S3_BUCKET: 'elasticbeanstalk-sa-east-1-654719900413'
            WAIT: 'true'
    medline:
    - step:
        caches:
          - node
        name: "Build"
        script:
          - npm install
          - npm run build-medline
          - apt-get update && apt-get install -y
          - apt-get install zip
          - zip -r itms-frontend.zip dist/ Dockerfile nginx-file.conf Dockerrun.aws.json
        artifacts:
          - itms-frontend.zip
    - step:
        name: "Deploy to medline"
        deployment: medline
        script:
        - pipe: atlassian/aws-elasticbeanstalk-deploy:0.6.6
          variables:
            AWS_ACCESS_KEY_ID: AKIAT7JGNEGM5C5PE6P5
            AWS_SECRET_ACCESS_KEY: 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
            AWS_DEFAULT_REGION: us-east-1
            APPLICATION_NAME: Tcregional-FrontEnd-MedilineEnv
            ENVIRONMENT_NAME: TcregionalFrontendMedilineenv-env
            ZIP_FILE: "itms-frontend.zip"
            S3_BUCKET: elasticbeanstalk-us-east-1-273347846553
            WAIT: 'true'